@import 'tailwindcss';
@plugin "@tailwindcss/typography";

@custom-variant dark (&:is(.dark *));

@theme {
  --color-blue-50: rgb(var(--blue-50));
  --color-blue-100: rgb(var(--blue-100));
  --color-blue-200: rgb(var(--blue-200));
  --color-blue-300: rgb(var(--blue-300));
  --color-blue-400: rgb(var(--blue-400));
  --color-blue-500: rgb(var(--blue-500));
  --color-blue-600: rgb(var(--blue-600));
  --color-blue-700: rgb(var(--blue-700));
  --color-blue-800: rgb(var(--blue-800));
  --color-blue-900: rgb(var(--blue-900));
  --color-blue-950: rgb(var(--blue-950));
  --color-blue: rgb(var(--blue));

  --color-orange-50: rgb(var(--orange-50));
  --color-orange-100: rgb(var(--orange-100));
  --color-orange-200: rgb(var(--orange-200));
  --color-orange-300: rgb(var(--orange-300));
  --color-orange-400: rgb(var(--orange-400));
  --color-orange-500: rgb(var(--orange-500));
  --color-orange-600: rgb(var(--orange-600));
  --color-orange-700: rgb(var(--orange-700));
  --color-orange-800: rgb(var(--orange-800));
  --color-orange-900: rgb(var(--orange-900));
  --color-orange: rgb(var(--orange));
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

@layer base {
  :root {
    /* Brand Blue */
    --blue: 0 63 252;
    --blue-50: 249 250 255;
    --blue-100: 221 230 255;
    --blue-200: 165 188 255;
    --blue-300: 109 146 255;
    --blue-400: 53 104 255;
    --blue-500: var(--blue);
    --blue-600: 0 50 201;
    --blue-700: 0 37 150;
    --blue-800: 0 25 99;
    --blue-900: 0 12 48;
    --blue-950: 0 6 23;
    /* Brand Orange */
    --orange: 255 103 52;
    --orange-50: 255 240 236;
    --orange-100: 255 225 215;
    --orange-200: 255 195 174;
    --orange-300: 255 164 134;
    --orange-400: 255 134 93;
    --orange-500: var(--orange);
    --orange-600: 251 63 0;
    --orange-700: 195 49 0;
    --orange-800: 139 35 0;
    --orange-900: 83 21 0;
    --orange-950: 55 14 0;
  }

  [data-theme~="github-light"] span {
    color: var(--shiki-light); 
  }
  
  [data-theme~="github-dark-dimmed"] span {
     color: var(--shiki-dark); 
  }

  .prose [data-rehype-pretty-code-figure] pre,
  .prose [data-rehype-pretty-code-figure] code {
    background-color: #212830 !important;
  }

  [data-rehype-pretty-code-figure] pre {
    @apply px-0;
  }

  [data-rehype-pretty-code-figure] code {
    @apply text-sm leading-loose! md:text-base;
  }

  [data-rehype-pretty-code-figure] code[data-line-numbers] {
    counter-reset: line;
  }

  [data-rehype-pretty-code-figure] {
    code[data-line-numbers] {
      > [data-line]::before {
        counter-increment: line;
        content: counter(line);
        @apply mr-4 inline-block w-4 text-right text-gray-500;
      }
    }
  }

  [data-rehype-pretty-code-figure] [data-line] {
    @apply border-l-2 border-l-transparent px-3;
  }

  [data-rehype-pretty-code-figure] [data-highlighted-line] {
    background: rgba(200, 200, 255, 0.1);
    @apply border-l-blue-400;
  }

  [data-rehype-pretty-code-figure] [data-highlighted-chars] {
    @apply rounded-sm bg-zinc-600/50;
    box-shadow: 0 0 0 4px rgb(82 82 91 / 0.5);
  }

  [data-rehype-pretty-code-figure] [data-chars-id] {
    @apply border-b-2 p-1 shadow-none;
  }

  [data-rehype-pretty-code-title] {
    @apply rounded-tl-md rounded-tr-md bg-zinc-600 px-3 py-2 font-semibold text-white!;
  }

  [data-rehype-pretty-code-figure]:has(> [data-rehype-pretty-code-title]) pre {
    @apply !rounded-t-none;
  }
}

.section {
  @apply mx-auto flex w-full max-w-4xl p-5;
}

.subheading-anchor {
  @apply no-underline hover:underline;
}